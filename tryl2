stages:
  - setup
  - frontend
  - backend

variables:
  DJANGO_PORT: "8000"
  VUE_PORT: "9980"
  INTERNAL_IP: "10.0.34.181"  # Replace with your specific IP address
  FRONTEND_URL: "https://$INTERNAL_IP:$VUE_PORT"
  BACKEND_URL: "https://$INTERNAL_IP:$DJANGO_PORT"

setup:
  stage: setup
  tags:
    - shell
  script:
    # Install required packages for the environment
    - echo "Installing necessary system dependencies..."
    - sudo apt update && sudo apt install -y python3 python3-venv python3-pip nodejs npm
    - echo "System dependencies installed."

    # Create and activate Python virtual environment
    - echo "Setting up Python virtual environment..."
    - python3 -m venv env
    - source env/bin/activate
    - echo "Python virtual environment activated."

    # Install Python dependencies
    - echo "Installing required Python packages..."
    - pip install django-extensions werkzeug pyopenssl
    - echo "Python packages installed."

frontend:
  stage: frontend
  tags:
    - shell
  script:
    - echo "Starting Vue server on $INTERNAL_IP:$VUE_PORT..."
    - cd frontend
    - npm install
    # If Vue is not configured for HTTPS by default, add HTTPS support here (e.g., a custom script or config file).
    - screen -dmS vue bash -c "npm run dev"
    - sleep 10  # Wait for server to start
    - curl -vk $FRONTEND_URL || echo "Vue server not reachable."
    - echo "Vue server started successfully on $FRONTEND_URL."

backend:
  stage: backend
  tags:
    - shell
  script:
    - echo "Starting Django server on $INTERNAL_IP:$DJANGO_PORT..."
    - cd backend
    - source ../env/bin/activate
    - screen -dmS django bash -c "python manage.py runserver_plus 0.0.0.0:$DJANGO_PORT --cert-file devserver.crt --key-file devserver.key"
    - sleep 10  # Wait for server to start
    - curl -vk $BACKEND_URL || echo "Django server not reachable."
    - echo "Django server started successfully on $BACKEND_URL."
