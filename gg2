stages:
  - frontend
  - backend

variables:
  DJANGO_PORT: "8000"
  VUE_PORT: "9980"
  INTERNAL_IP: "localhost"  # Binding to localhost

frontend:
  stage: frontend
  tags:
    - shell
  script:
    # Start Vue server
    - echo "Starting Vue server on $INTERNAL_IP:$VUE_PORT..."
    - screen -dmS vue bash -c "npm run dev -- --port $VUE_PORT --host $INTERNAL_IP"
    - echo "Vue server started on $INTERNAL_IP:$VUE_PORT"
    
    # Health check for Vue.js application
    - echo "Waiting for Vue.js server to start..."
    - sleep 10  # Wait for Vue to initialize (adjust timing as needed)
    - curl -f http://localhost:$VUE_PORT || (echo "Vue server not running!" && exit 1)
    - echo "Vue.js server is up and running."

backend:
  stage: backend
  tags:
    - shell
  script:
    # Install Django dependencies
    - echo "Installing Django dependencies..."
    - poetry install
    
    # Start Django server
    - echo "Starting Django server on $INTERNAL_IP:$DJANGO_PORT..."
    - screen -dmS django bash -c "poetry shell && python manage.py runserver_plus $INTERNAL_IP:$DJANGO_PORT --cert-file devserver.crt --key-file devserver.key"
    - echo "Django server started on $INTERNAL_IP:$DJANGO_PORT"
    
    # Health check for Django application
    - echo "Waiting for Django server to start..."
    - sleep 10  # Wait for Django to initialize (adjust timing as needed)
    - curl -f http://localhost:$DJANGO_PORT || (echo "Django server not running!" && exit 1)
    - echo "Django server is up and running."

# Optional: Verify if Vue.js process is running (additional check)
- echo "Checking if Vue.js process is running..."
- ps aux | grep "npm run dev" || (echo "Vue.js process not found!" && exit 1)

# Optional: Verify if Django process is running (additional check)
- echo "Checking if Django process is running..."
- ps aux | grep "python manage.py runserver" || (echo "Django process not found!" && exit 1)

# Artifacts for debugging if necessary
artifacts:
  paths:
    - vue_log.txt
    - django_log.txt
  expire_in: 1 hour
