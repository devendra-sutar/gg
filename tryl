#!/bin/bash 

# Check current user and directory
echo "Current user: $(whoami)"
echo "Current directory: $(pwd)"

# Set up a new user
echo "Setting up the ubuntu user..."
useradd -m -s /bin/bash ubuntu
echo "ubuntu:linux" | chpasswd

# Enable SSH password authentication
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
systemctl restart sshd

# Get the instance IP
INSTANCE_IP=$(hostname -I | awk '{print $1}')
echo "Instance IP is: $INSTANCE_IP"

# Clone the repository
echo "Cloning the repository..."
git clone http://devendra.sutar:glpat-46ssFt1WJcTyRVnCny@10.0.32.141/omega-development/omega-code.git /home/ubuntu/omega-project

# Set safe directory for git
echo "Setting safe directory for git..."
git config --global --add safe.directory /home/ubuntu/omega-project

# Checkout the specific branch
cd /home/ubuntu/omega-project
echo "Checking out the branch dev-ubuntu-testing..."
git checkout dev-ubuntu-testing

# Configure the frontend
echo "Configuring the frontend..."
sudo rm -f /home/ubuntu/omega-project/frontend/api-config.js
cat <<EOF > /home/ubuntu/omega-project/frontend/api-config.js
export const UI_URL = "https://${INSTANCE_IP}:9980/";
export const BASE_URL = "https://${INSTANCE_IP}:8000";
export const KEYCLOAK_URL = "https://10.0.34.141:8443";
EOF

# Set ownership for frontend files
echo "Setting ownership for frontend files..."
sudo chown -R ubuntu:ubuntu /home/ubuntu/omega-project/frontend

# Install frontend dependencies
echo "Installing frontend dependencies..."
cd /home/ubuntu/omega-project/frontend
sudo rm -rf node_modules
npm install

# Check if npm install was successful
if [ $? -eq 0 ]; then
  echo "Frontend npm install successful."
else
  echo "Error during npm install!" >&2
  exit 1
fi

# Start the frontend server in the background
echo "Starting frontend server..."
nohup npm run dev > /home/ubuntu/frontend.log 2>&1 &

# Configure the backend
echo "Configuring the backend..."
cd /home/ubuntu/omega-project/backend
echo "OMEGA_IP=${INSTANCE_IP}" >> /home/ubuntu/omega-project/backend/.env

# Install backend dependencies
echo "Installing backend dependencies..."
poetry install

# Check if poetry install was successful
if [ $? -eq 0 ]; then
  echo "Backend poetry install successful."
else
  echo "Error during poetry install!" >&2
  exit 1
fi

# Start the backend server in the background
echo "Starting backend server..."
nohup poetry run python manage.py runserver_plus 0.0.0.0:8000 --cert-file devserver.crt --key-file devserver.key > /home/ubuntu/backend.log 2>&1 &

# Final confirmation
echo "Both frontend and backend servers started in the background."
