#!/bin/bash

# Configuration
SERVICES=("prometheus" "grafana" "loki" "tempo")
MAX_RETRIES=3
LOG_FILE="/var/log/service_monitor.log"
NOTIFICATION_EMAIL="admin@example.com"

# Functions
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

notify() {
    local subject=$1
    local body=$2
    echo "$body" | mail -s "$subject" "$NOTIFICATION_EMAIL"
    log "Notification sent: $subject"
}

check_service_status() {
    local service=$1
    local status=$(systemctl is-active "$service")
    echo "$status"
}

restart_service() {
    local service=$1
    log "Attempting to restart $service..."
    sudo systemctl restart "$service"
}

fetch_logs() {
    local service=$1
    local lines=$2
    journalctl -u "$service" --no-pager --lines="$lines"
}

heal_service() {
    local service=$1
    local logs=$2

    if echo "$logs" | grep -qi "failed to bind"; then
        log "Detected port binding issue. Trying to free the port..."
        local port=$(ss -tulnp | grep "$service" | awk '{print $5}' | cut -d: -f2)
        if [[ -n "$port" ]]; then
            sudo fuser -k "$port"/tcp
            restart_service "$service"
        fi
    elif echo "$logs" | grep -qi "permission denied"; then
        log "Detected permission issue. Fixing permissions..."
        sudo chmod 755 /var/run/"$service" /var/log/"$service"
        restart_service "$service"
    elif echo "$logs" | grep -qi "missing file"; then
        log "Detected missing file issue. Attempting reinstallation..."
        sudo apt install --reinstall "$service" -y
        restart_service "$service"
    else
        log "Unhandled error. Manual intervention required."
        notify "Critical Failure: $service" "Unhandled error detected in $service. Manual intervention required."
        exit 1
    fi
}

# Main Script
log "Starting service status check..."

for SERVICE in "${SERVICES[@]}"; do
    RETRY_COUNT=0
    STATUS=$(check_service_status "$SERVICE")

    if [[ "$STATUS" != "active" ]]; then
        log "Service $SERVICE is not running!"
        LOGS=$(fetch_logs "$SERVICE" 10)
        log "Last 10 logs for $SERVICE:"
        log "$LOGS"

        while [[ "$STATUS" != "active" && $RETRY_COUNT -lt $MAX_RETRIES ]]; do
            heal_service "$SERVICE" "$LOGS"
            sleep 5
            STATUS=$(check_service_status "$SERVICE")
            RETRY_COUNT=$((RETRY_COUNT + 1))
        done

        if [[ "$STATUS" != "active" ]]; then
            log "Service $SERVICE failed to start after $MAX_RETRIES attempts."
            notify "Service Failure: $SERVICE" "Service $SERVICE failed to start after $MAX_RETRIES attempts. Logs: $LOGS"
            exit 1
        else
            log "Service $SERVICE successfully recovered after healing."
            notify "Service Recovery: $SERVICE" "Service $SERVICE successfully recovered after healing."
        fi
    else
        log "Service $SERVICE is running."
    fi
done

log "All services are running correctly."
notify "All Services Running" "All monitored services are running correctly."
exit 0
