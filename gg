
 terraform output -raw ip2>${TF_ROOT}/ip2.txt 
    - LGTM=$(cat "${TF_ROOT}/ip2.txt")



#!/bin/bash
INSTANCE_IP=$(hostname -I | awk '{print $1}')
echo  "$LGTM"



cat<<EOF > /etc/nginx/sites-available/default
server {
    listen 80;
    server_name ${INSTANCE_IP};
 
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}
 
server {
    listen 443 ssl;
    server_name ${INSTANCE_IP};  # Replace with your domain or IP
 
    root /var/www/html;
 
    ssl_certificate /etc/nginx/ssl/self-signed.crt;
    ssl_certificate_key /etc/nginx/ssl/self-signed.key;
 
    location / {
        try_files \$uri \$uri/ /index.html;
    }
 
    location /api {
    proxy_pass https://${INSTANCE_IP}:8000;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;

    }
    location /grafana-monitoring/ {
    proxy_pass https://${LGTM}:3000;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
    }

    # Optional: SSL configurations
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
}
EOF

sudo apt update
sudo apt install npm -y
cd /home/ubuntu/omega-code/frontend && npm run build
cd /home/ubuntu/omega-code/frontend && sudo cp -rf dist/*  /var/www/html/ 
#sudo systemctl restart omega-backend.service
#sudo systemctl reload nginx
cd /home/ubuntu/omega-code/frontend && sudo nginx -t 
cd /home/ubuntu/omega-code/frontend && echo "linux" | sudo -S systemctl reload nginx
cd /home/ubuntu/omega-code/frontend && sudo systemctl restart omega-backend.service
